#!/bin/bash

if [ `id -u` != 0 ]; then
  echo 'You must be root to run this script'
  exit 1
fi

pushd /root >/dev/null

FEDORA_VERSION=$(rpm -q --queryformat '%{VERSION}' fedora-release)
echo Fedora version: $FEDORA_VERSION
REDHAT_VERSION=$(rpm -q --queryformat '%{VERSION}' redhat-release-server)
echo Red Hat version: $REDHAT_VERSION
CENTOS_VERSION=$(rpm -q --queryformat '%{VERSION}' centos-release)
echo CentOS version: $CENTOS_VERSION
RELEASE_MAYOR=$(rpm -q --queryformat '%{RELEASE}' redhat-release-server | awk -F. '{print $1}')
RELEASE_MINOR=$(rpm -q --queryformat '%{RELEASE}' redhat-release-server | awk -F. '{print $2}')
RELEASE="$RELEASE_MAYOR.$RELEASE_MINOR"

set -x

if [ ! -z "$REDHAT_VERSION" ]; then
  # setup fast yum repos
  cat > /etc/yum.repos.d/rhel-brq.repo <<EOS
[eng-Server]
name=eng-Server
baseurl=http://download.eng.brq.redhat.com/pub/rhel/released/RHEL-$RELEASE_MAYOR/$RELEASE/Server/\$basearch/os/Server
enabled=1
gpgcheck=0
skip_if_unavailable=1

[eng-HighAvailability]
name=eng-HighAvailability
baseurl=http://download.eng.brq.redhat.com/pub/rhel/released/RHEL-$RELEASE_MAYOR/$RELEASE/Server/\$basearch/os/HighAvailability
enabled=1
gpgcheck=0
skip_if_unavailable=1

[eng-LoadBalancer]
name=eng-LoadBalancer
baseurl=http://download.eng.brq.redhat.com/pub/rhel/released/RHEL-$RELEASE_MAYOR/$RELEASE/Server/\$basearch/os/LoadBalancer
enabled=1
gpgcheck=0
skip_if_unavailable=1

[eng-ResilientStorage]
name=eng-ResilientStorage
baseurl=http://download.eng.brq.redhat.com/pub/rhel/released/RHEL-$RELEASE_MAYOR/$RELEASE/Server/\$basearch/os/ResilientStorage
enabled=1
gpgcheck=0
skip_if_unavailable=1

[eng-ScalableFileSystem]
name=eng-ScalableFileSystem
baseurl=http://download.eng.brq.redhat.com/pub/rhel/released/RHEL-$RELEASE_MAYOR/$RELEASE/Server/\$basearch/os/ScalableFileSystem
enabled=1
gpgcheck=0
skip_if_unavailable=1

[eng-debug]
name=eng-debug
baseurl=http://download.eng.brq.redhat.com/pub/rhel/released/RHEL-$RELEASE_MAYOR/$RELEASE/Server/\$basearch/os/../debug
enabled=1
gpgcheck=0
skip_if_unavailable=1

[eng-optional-\$basearch-debug]
name=eng-optional-\$basearch-debug
baseurl=http://download.eng.brq.redhat.com/pub/rhel/released/RHEL-$RELEASE_MAYOR/$RELEASE/Server/\$basearch/os/../../optional/\$basearch/debug
enabled=1
gpgcheck=0
skip_if_unavailable=1

[eng-optional-\$basearch-os]
name=eng-optional-\$basearch-os
baseurl=http://download.eng.brq.redhat.com/pub/rhel/released/RHEL-$RELEASE_MAYOR/$RELEASE/Server/\$basearch/os/../../optional/\$basearch/os
enabled=1
gpgcheck=0
skip_if_unavailable=1
EOS
elif [ ! -z "$FEDORA_VERSION" ]; then
  # make sure there is not graphical startup
  ln -sf /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
fi

# disable presto download
[ -f /etc/yum/pluginconf.d/presto.conf ] && sed -iE 's/^enabled=1/enabled=0/g' /etc/yum/pluginconf.d/presto.conf

# make grub faster
sed -iE 's/^timeout/timeout=0/g' /etc/grub.conf

# must-have packages
yum -y install mlocate openssh-clients acpid ntp vim screen wget curl telnet rsync mc git

# basic services
chkconfig acpid on
chkconfig ntpd on
chkconfig network on
service ntpd start
service acpid start
service smartd stop && chkconfig --del smartd

# aliases
if [ ! grep "bin-public" /root/.bashrc 2>/dev/null; ]; then
  echo -e "\n\n# by bin-public bootstrap" >> /root/.bashrc
  echo 'alias halt="poweroff"' >> /root/.bashrc
  echo 'alias v="vim"' >> /root/.bashrc
  echo 'alias vi="vim"' >> /root/.bashrc
  echo 'alias g="git"' >> /root/.bashrc
  echo 'alias yi="yum install"' >> /root/.bashrc
  echo 'alias yyi="yum -y install"' >> /root/.bashrc
  echo 'alias yyyi="yum -Cy install"' >> /root/.bashrc
  echo 'alias yu="yum update"' >> /root/.bashrc
  echo 'alias yyu="yum -y update"' >> /root/.bashrc
  echo 'alias yr="yum remove"' >> /root/.bashrc
  echo 'alias yyr="yum -y remove"' >> /root/.bashrc
  echo 'alias ypr="yum provides"' >> /root/.bashrc
  echo 'alias ys="yum search"' >> /root/.bashrc
  echo 'alias yprw="yum provides \$(which \$1)"' >> /root/.bashrc
  echo 'alias ff="cd /usr/share/foreman"' >> /root/.bashrc
fi

# install public scripts
if [ -d bin ]; then
  pushd bin >/dev/null
  git pull
  popd >/dev/null
else
  git clone git://github.com/lzap/bin-public.git bin
fi

# copy termina infos
ln -sf /root/bin/files/terminfo /root/.terminfo

# install ssh keys
mkdir /root/.ssh 2>/dev/null
cat /root/bin/files/lzap_id_{rsa,dsa}.pub >> /root/.ssh/authorized_keys
chmod 700 /root/.ssh; chmod 600 /root/.ssh/authorized_keys
chown -R root:root /root/.ssh; restorecon -Rv /root/.ssh

# cleanup
yum clean all

popd >/dev/null
