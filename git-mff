#!/bin/sh

# Rebase & Merge & Push a remote branch using hub/git

[[ "$1" == "" ]] && echo "Usage: $0 remote/branch" && exit 1
#set -x

blah() {
  echo -e "\e[1m$1\e[0m"
}

push_that() {
  git --no-pager log --graph --pretty=format:'%Cred%h%Creset %s %C(bold blue)<%an>%Creset' \
    --abbrev-commit "origin/$1..$1"
  echo -en "\n"
  blah "[*] SHOWING STATS"
  git diff "$PARENT..HEAD" --stat
  blah "[*] DRY-PUSHING"
  git push -n
  blah "[*] PUSH NOW FOR REAL [ENTER]?" && read && git push
}

blah "[*] UPDATING"
git checkout develop 2>/dev/null || \
  git checkout master 2>/dev/null || \
  git checkout gh-pages 2>/dev/null
PARENT=$(git rev-parse --abbrev-ref HEAD)
#blah "[*] FETCHING ALL BRANCHES"
#git fetch -p --all
blah "[*] PULLING $PARENT"
git pull
blah "[*] CHECKING OUT USING HUB"
hub checkout "$1" || git checkout "$1"
FROM=$(git rev-parse --abbrev-ref HEAD)
git checkout "$PARENT"
BRANCH=$(date +mff-temp-%Y%m%d-%H%M%S)
trap "git branch -D '$BRANCH'" EXIT
blah "[*] REBASE AND AMEND AND MERGE (IN BRANCH $BRANCH)"
git checkout -B "$BRANCH" "$FROM" && \
  git rebase -f "$PARENT" && \
  git diff "$PARENT..HEAD" --stat
echo "Spawning interactive shell. Feel free to rebase, merge, cherry-pick"
echo "and type 'exit' when done. The merging script will continue. You will"
echo "still able to cancel it before pushing to remote."
echo "The current HEAD is:"
git log -1
bash
git diff "$PARENT..HEAD"
git checkout "$PARENT" && git merge --ff-only "$BRANCH" && push_that "$PARENT"
# TODO https://github.com/stephencelis/ghi CLOSE PR
